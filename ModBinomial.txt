####################
####Modelo Binomial
#x=0,1,....,n
#n=numero de expuestos
#p=probabilildad de ocurrencia
#E(x)=n*p 
#V(x)=n*p*(1-p)
#Recordar que mu=n*p entonces p=mu/n
#####################
#########Ligas para el modelo Binomial
###Liga canonica en terminos de mu

##log(mu/(n-mu))=x*beta sustituyendo mu=n*p entonces log(n*p/(n-n*p))=log(p/(1-p))

###Liga logistica
##log(p/(1-p))=x*beta entonces p= exp(x*beta)/(1+exp(x*b))


###Liga normal inversa o liga probit
##phi^(-1)(p)=x*beta entonces p=phi(x*beta)


###Liga log-log
###log(-log(p))=x*beta entonces p=exp(-exp(x*beta))

##Liga complementaria log-log o clog-log
###log(-log(1-p))=x*beta entonces p=1-exp(-exp(x*beta))
####################

model
{
#Likelihood
for (i in 1:n) {
	y[i] ~ dbin(p[i],ne[i])
	mu[i]<-ne[i]*p[i]

#########Liga logistica
######
	logit(p[i])<-beta[1]+beta[2]*x[i]
	eta[i]<-beta[1]+beta[2]*x[i]
  p[i]<-exp(eta[i])/(1+exp(eta[i]))


##########Liga probit
#####
	#p[i]<-phi(beta[1]+beta[2]*x[i])

#Liga log-log
#####
#	eta[i]<-beta[1]+beta[2]*x[i]
#	p[i]<-exp(-exp(eta[i]))

#Liga clog-log
#####
#	cloglog(p[i])<-beta[1]+beta[2]*x[i]
}

#####
#Priors 
for (j in 1:2) { beta[j] ~ dnorm(0,0.001) }

#Prediction 1
for (i in 1:n) { yf1[i] ~ dbin(p[i],ne[i]) }

#Prediction 2
	yf2 ~ dbin(pf,nef) 
	muf<-nef*pf


#####
#Liga logistica
        logit(pf)<-beta[1]+beta[2]*xf
        etaf<-beta[1]+beta[2]*xf
        pf<-exp(etaf)/(1+exp(etaf))
#####
#Liga probit
	      #pf<-phi(beta[1]+beta[2]*xf)


#####
#Liga log-log
        #etaf<-beta[1]+beta[2]*xf
	      #pf<-exp(-exp(etaf))

#####
#Liga log-log
        #cloglog(pf)<-beta[1]+beta[2]*xf	
}
